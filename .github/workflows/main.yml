name: CICD
on: 
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
#      - name: Docker Compose Start
#        run: |
#         docker-compose start | true
      - name: Print Spring Profile
        run: |
          echo "Active profile: ${{ env.SPRING_PROFILES_ACTIVE}}"
        env:
          SPRING_PROFILES_ACTIVE: prod

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew clean build -Dspring.profiles.active=prod

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Check Docker version
        run: |
          docker --version
          
      - name: Stop existing application
        run: |
          docker ps -q --filter "name=capstone2" | xargs -r docker stop
          docker ps -aq --filter "name=capstone2" | xargs -r docker rm

      - name: Remove old Docker image
        run: |
          docker rmi capstone2:latest || true  # 이미지가 없을 경우 오류를 무시
          
      - name: Build Docker image
        run: |
          docker build -t capstone2:latest .

      - name: Run Docker container
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_USERNAME }}
          AWS_S3_ACCESS_KEY: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_S3_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

        run: |
          docker run -d --restart=always --network llm-network --name capstone2 -p 8080:8080 \
          -e ACTIVE_PROFILE=prod \
          -e DATABASE_URL=$DATABASE_URL \
          -e DATABASE_USERNAME=$DATABASE_USERNAME \
          -e DATABASE_PASSWORD=$DATABASE_PASSWORD \
          -e AWS_S3_ACCESS_KEY=$AWS_S3_ACCESS_KEY \
          -e AWS_S3_SECRET_KEY=$AWS_S3_SECRET_KEY \
          -e AWS_S3_BUCKET=$AWS_S3_BUCKET \
          -e AWS_S3_REGION=$AWS_S3_REGION \
          -e JWT_SECRET=$JWT_SECRET \
          capstone2:latest
          
#      - name: Check Docker network
#        run: |
#          docker network inspect llm-network

      - name: Check application logs
        run: |
          docker logs capstone2